// migrations/migrateTenantDatabases.js
import { PrismaClient } from '@prisma/client';
import { execSync } from 'child_process';
const prisma = new PrismaClient();

async function migrateTenantDatabases(tenantId) {
  try {
    const tenant = await prisma.tenant.findUnique({
      where: { id: tenantId },
    });

    if (!tenant) {
      throw new Error(`Tenant with ID ${tenantId} not found.`);
    }

    // Set the environment variable for DATABASE_URL based on the tenant's database configuration
    process.env.DATABASE_URL = `postgresql://${tenant.dbUsername}:${tenant.dbPassword}@${tenant.dbHost}:${tenant.dbPort}/${tenant.dbName}`;

    // Run migrations for the tenant's database
    execSync('npx prisma migrate dev', { stdio: 'inherit' });
    console.log(`Migrations completed for tenant with ID: ${tenantId}`);
  } catch (error) {
    console.error(
      `Error running migrations for tenant with ID ${tenantId}:`,
      error.message,
    );
    throw error;
  }
}

export default { migrateTenantDatabases };
